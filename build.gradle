plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //VALIDATION
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //SWL(POSTGRE)
//    runtimeOnly 'org.postgresql:postgresql'
    //TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.postgresql:postgresql:42.7.2'


// ✅ MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

// ✅ OpenAPI / Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'



// ✅ JJWT (JWT токены)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

}

tasks.named('test') {
    useJUnitPlatform()
}
